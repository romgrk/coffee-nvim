// Generated by CoffeeScript 1.10.0
(function() {
  var Reflect, Tabpage, TabpageProxy;

  Reflect = require('harmony-reflect');

  Tabpage = {};

  Tabpage.properties = {
    window: {
      get: function() {
        return this.getWindow();
      }
    },
    windows: {
      get: function() {
        return this.getWindows();
      }
    },
    valid: {
      get: function() {
        return this.isValid();
      }
    }
  };

  module.exports = TabpageProxy = (function() {
    function TabpageProxy(target) {
      Object.defineProperties(target, Tabpage.properties);
      return new Proxy(target, this);
    }

    TabpageProxy.prototype.get = function(target, name, receiver) {
      var varName;
      if (name.charAt(0) === ':') {
        varName = name.substring(1);
        return target.getVar(varName);
      }
      if (name in target) {
        return target[name];
      }
      return void 0;
    };

    TabpageProxy.prototype.set = function(target, name, val, receiver) {
      var varName;
      if (name.charAt(0) === ':') {
        varName = name.substring(1);
        target.setVar(varName, val);
      } else {
        target[name] = val;
      }
      return true;
    };

    return TabpageProxy;

  })();

}).call(this);
