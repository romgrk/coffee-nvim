// Generated by CoffeeScript 1.10.0
(function() {
  var Reflect, VimProxy, hh;

  Reflect = require('harmony-reflect');

  hh = require('../helpers');

  module.exports = VimProxy = (function() {
    VimProxy.prototype["var"] = {
      get: function(target, name) {
        return Nvim.getVar(name);
      },
      set: function(target, name, val) {
        return Nvim.setVar(name, val);
      },
      deleteProperty: function(target, name) {
        var e, error1;
        try {
          Nvim.setVar(name, null);
        } catch (error1) {
          e = error1;
          return false;
        }
        return true;
      }
    };

    VimProxy.prototype.option = {
      get: function(target, name) {
        return Nvim.getOption(name);
      },
      set: function(target, name, val) {
        return Nvim.setOption(name, val);
      },
      deleteProperty: function(target, name) {
        var e, error1;
        try {
          Nvim.setOption(name, '');
        } catch (error1) {
          e = error1;
          return false;
        }
        return true;
      }
    };

    function VimProxy() {
      var vimObject;
      vimObject = {
        option: new Proxy({}, this.option),
        "var": new Proxy({}, this["var"])
      };
      return new Proxy(vimObject, this);
    }

    VimProxy.prototype.get = function(target, name, receiver) {
      var error, error1;
      if (name in target) {
        return target[name];
      }
      try {
        return hh.res(Nvim.getVvar(name));
      } catch (error1) {
        error = error1;
        return void 0;
      }
    };

    VimProxy.prototype.set = function(target, name, val, receiver) {
      return false;
    };

    return VimProxy;

  })();

}).call(this);
