// Generated by CoffeeScript 1.10.0
(function() {
  var Fs, LOG, Net, Nvim, PORT, Path, attach, await, defer, echo, err, error, fiber, log, main, sock, stdio, sync, util,
    slice = [].slice;

  Net = require('net');

  Path = require('path');

  Fs = require('fs');

  util = require('util');

  attach = require('neovim-client');

  sync = require('synchronize');

  fiber = sync.fiber;

  await = sync.await;

  defer = sync.defer;

  log = require('romgrk-logger');

  PORT = 5000;

  LOG = function(content) {
    return Fs.appendFileSync('log.txt', util.inspect(content));
  };

  Nvim = null;

  sock = null;

  stdio = [process.stdout, process.stdin];

  try {
    sock = Net.createConnection(PORT);
    console.log = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return sock.write(args.join(' ') + '\n');
    };
  } catch (error) {
    err = error;
    LOG(err);
    console.log = function() {};
  }

  echo = function() {
    var args, hl, msg;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    if (Nvim == null) {
      return;
    }
    hl = args.length === 1 ? 'TextInfo' : args[0];
    msg = args.length === 1 ? args[0] : args.slice(1).join(' ');
    return Nvim.command("EchoHL " + hl + " '" + msg + "'");
  };

  log.info(("[" + __filename + "] ") + process.pid);

  main = function(nvim) {
    log.success('Started... [channel=' + nvim._channel_id + ']');
    return fiber(function() {
      var context;
      echo("'RPC: " + (Path.basename(__filename)) + " " + process.pid + "'");
      return context = require('./nvim');
    });
  };

  attach(stdio[0], stdio[1], function(err, nvim) {
    if (err) {
      log.error('error: ' + err);
      process.exit(0);
    }
    global.Nvim = nvim;
    log.debug(("[" + __filename + "] connected on channel ") + nvim._channel_id);
    echo(("[" + __filename + "] connected on channel ") + nvim._channel_id);
    sock.on('data', function(d) {
      return echo(d);
    });
    nvim.on('request', function(method, args, resp) {
      var msg;
      msg = method + ' ' + args;
      log.warning('request: ' + msg);
      return resp.send(msg);
    });
    nvim.on('notification', function(method, args) {
      var msg;
      msg = method + ' ' + args;
      return log.info('notification: ' + msg);
    });
    return main(nvim);
  });

}).call(this);
